name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
        type: string
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
          - prerelease

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Bump version
        run: |
          if [ "${{ github.event.inputs.version }}" != "" ]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          else
            npm version ${{ github.event.inputs.release_type }} --no-git-tag-version
          fi
          
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
      
      - name: Update README with version
        run: |
          # Update installation instructions in README if needed
          sed -i "s/log-lazy@[0-9]\+\.[0-9]\+\.[0-9]\+/log-lazy@${{ env.NEW_VERSION }}/g" README.md || true
      
      - name: Commit version bump
        run: |
          git add package.json README.md
          git commit -m "chore: bump version to ${{ env.NEW_VERSION }}"
      
      - name: Push changes
        run: |
          git push origin main
      
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create Git tag
        run: |
          git tag -a "v${{ env.NEW_VERSION }}" -m "Release v${{ env.NEW_VERSION }}"
          git push origin "v${{ env.NEW_VERSION }}"
      
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          body: |
            ## ðŸš€ Release v${{ env.NEW_VERSION }}
            
            ### ðŸ“Š Latest Benchmark Results
            - Lazy logging is **100-1000x faster** than traditional logging when disabled
            - **238x faster** in production conditions (mixed workload)
            - Minimal overhead compared to no logs at all
            
            ### ðŸ“¦ Installation
            ```bash
            bun add log-lazy@${{ env.NEW_VERSION }}
            ```
            
            ### ðŸ”¥ Quick Start
            ```javascript
            import makeLog from 'log-lazy';
            
            const log = makeLog({ level: 'info' });
            
            // Just add () => for lazy evaluation!
            log(() => \`Processing \${items.length} items\`);
            log.debug(() => \`Debug: \${JSON.stringify(data)}\`);
            ```
            
            See [README](https://github.com/${{ github.repository }}/blob/main/README.md) for full documentation.
          draft: false
          prerelease: ${{ github.event.inputs.release_type == 'prerelease' }}